 import java.util.*;
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        Queue<TreeNode>queue=new LinkedList<>();
        List<List<Integer>> list = new LinkedList<List<Integer>>();
        if(root==null) return list;
        queue.offer(root);
        while(!queue.isEmpty()){
            List<Integer>list1=new LinkedList<>();
            int size=queue.size();
            for(int i=0;i<size;i++){
                TreeNode node=queue.poll();
                list1.add(node.val);
                if(node.left!=null) queue.offer(node.left);
                if(node.right!=null) queue.offer(node.right);
            }
            list.add(list1);
        }
        Collections.reverse(list);
        return list;
    }
}
